#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using software SPI (default case):
#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT,
  OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

// Buttons settings
#define rightButton 4
#define leftButton 2
#define okButton 3
#define steamButton 5

// Light buttons settings
#define light_rightButton 32
#define light_leftButton 36
#define light_okButton 34
#define light_powerButton 38
#define light_waterSensor 40
#define light_steamButton_WHITE 30
#define light_steamButton_RED 31

// Potentiometer settings
#define potentiometerPin A0
#define power_1_End 205
#define power_2_End 410
#define power_3_End 615
#define power_4_End 900

// Alcohol pumps settings
#define alcohol_Pump 11
#define soda_Pump 12

// Time settings
#define button_Check_time 30
#define button_Back_time 150
#define alchol_Time 2500
#define soda_Time 13000
#define shot_Time 5000
#define mediumDrink_alcohol_Time 5000
#define mediumDrink_soda_Time 8000
#define bigDrink_alcohol_Time 8000
#define bigDrink_soda_Time 10000
#define powerButton_Blinking 1000

int power = 0;

int potentiometer_Value;

// Image of alcohol power 1
const unsigned char level_1 [] PROGMEM = {
  // 'level_1, 128x32px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0x04, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x02, 0x02, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x02, 0x02, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0x04, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Image of alcohol power 2
const unsigned char level_2 [] PROGMEM = {
  // 'level_2, 128x32px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Image of alcohol power 3
const unsigned char level_3 [] PROGMEM = {
  // 'level_3, 128x32px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'level_4', 128x32px
const unsigned char level_4 [] PROGMEM = {
  // 'level_4, 128x32px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Image of alcohol power 5
const unsigned char level_5 [] PROGMEM = {
  // 'level_5, 128x32px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x7f, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0xff, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0xff, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x7f, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup()
{

  Serial.begin(9600);

  display.display();
  delay(2000);
  display.clearDisplay();
  

  pinMode(rightButton, INPUT_PULLUP);
  pinMode(leftButton, INPUT_PULLUP);
  pinMode(okButton, INPUT_PULLUP);
  pinMode(steamButton, INPUT_PULLUP);
  pinMode(potentiometerPin, INPUT);

  pinMode(alcohol_Pump, OUTPUT);
  pinMode(soda_Pump, OUTPUT);
  
  pinMode(light_rightButton, OUTPUT);
  pinMode(light_leftButton, OUTPUT);
  pinMode(light_okButton, OUTPUT);
  pinMode(light_powerButton, OUTPUT);
  pinMode(light_waterSensor, OUTPUT);
  pinMode(light_steamButton_WHITE, OUTPUT);
  pinMode(light_steamButton_RED, OUTPUT);

  Serial.println("*****ALKOMAT COMPACT V0.0.1");
  Serial.println("");

  digitalWrite(light_powerButton, HIGH);
  delay(powerButton_Blinking);
  digitalWrite(light_powerButton, LOW);
  
  delay(powerButton_Blinking);

  digitalWrite(light_powerButton, HIGH);
  delay(powerButton_Blinking);
  digitalWrite(light_powerButton, LOW);

  delay(powerButton_Blinking);

  digitalWrite(light_powerButton, HIGH);
  delay(powerButton_Blinking);
  digitalWrite(light_powerButton, LOW);
  
}

bool is_Button_pressed(int button)
{

  if (digitalRead(button) == LOW)
  {

    delay(button_Check_time);

    if (digitalRead(button) == LOW)
    {
      return true;
    }
  }

  return false;
}

void start()
{

  //Press any button to start

  digitalWrite(light_rightButton, HIGH);
  digitalWrite(light_leftButton, HIGH);
  digitalWrite(light_okButton, HIGH);
  digitalWrite(light_steamButton_WHITE, HIGH);
  digitalWrite(light_steamButton_RED, HIGH);

  Serial.println("[ALKOMAT IS RUNNING...]");
}

void modeSelection(){

// Display on the screen "Alkomat is ready to serve"

while (!is_Button_pressed(okButton) && !is_Button_pressed(rightButton) && !is_Button_pressed(leftButton) && !is_Button_pressed(steamButton))
  {
  }

if(is_Button_pressed(steamButton)){

Serial.println("[SELECTED MODE: CUSTOM DRINK]");
power_Select();

} 
if(is_Button_pressed(rightButton)){

Serial.println("[SELECTED MODE: SHOT]");
shotMode();

} 
if(is_Button_pressed(okButton)){

Serial.println("[SELECTED MODE: MEDIUM DRINK]");
mediumDrink_mode();

} 
if(is_Button_pressed(leftButton)){

Serial.println("[SELECTED MODE: BIG DRINK]");
bigDrink_mode();

} 

}

void shotMode(){

digitalWrite(light_leftButton, LOW);
digitalWrite(light_okButton, LOW);
digitalWrite(light_waterSensor, HIGH);


Serial.println("[MAKING DRINK...]\n");  

digitalWrite(alcohol_Pump, HIGH);
delay(shot_Time);
digitalWrite(alcohol_Pump, LOW);

Serial.println("[ALCOHOL INSERTED]");
Serial.println("Drink is done...");
Serial.println("\n\n");

digitalWrite(light_leftButton, HIGH);
digitalWrite(light_okButton, HIGH);
digitalWrite(light_waterSensor, LOW);

}

void mediumDrink_mode(){

digitalWrite(light_leftButton, LOW);
digitalWrite(light_rightButton, LOW);
digitalWrite(light_waterSensor, HIGH);

Serial.println("[MAKING DRINK...]\n");

digitalWrite(alcohol_Pump, HIGH);
delay(mediumDrink_alcohol_Time);
digitalWrite(alcohol_Pump, LOW);

Serial.println("[ALCOHOL INSERTED]");

digitalWrite(soda_Pump, HIGH);
delay(mediumDrink_soda_Time);
digitalWrite(soda_Pump, LOW);

Serial.println("[SODA INSERTED]");
Serial.println("Drink is done...");
Serial.println("\n\n");

digitalWrite(light_leftButton, HIGH);
digitalWrite(light_rightButton, HIGH);
digitalWrite(light_waterSensor, LOW);


}

void bigDrink_mode(){

digitalWrite(light_rightButton, LOW);
digitalWrite(light_okButton, LOW);
digitalWrite(light_waterSensor, HIGH);


Serial.println("[MAKING DRINK...]\n");

digitalWrite(alcohol_Pump, HIGH);
delay(bigDrink_alcohol_Time);
digitalWrite(alcohol_Pump, LOW);

Serial.println("[ALCOHOL INSERTED]");

digitalWrite(soda_Pump, HIGH);
delay(bigDrink_soda_Time);
digitalWrite(soda_Pump, LOW);

Serial.println("[SODA INSERTED]");
Serial.println("Drink is done...");
Serial.println("\n\n");

digitalWrite(light_rightButton, HIGH);
digitalWrite(light_okButton, HIGH);
digitalWrite(light_waterSensor, LOW);


}

int power_Display(int power){

  display.clearDisplay();

if(power == 1){

display.drawBitmap(0, 0, level_1, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 2){

display.drawBitmap(0, 0, level_2, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 3){

display.drawBitmap(0, 0, level_3, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 4){

display.drawBitmap(0, 0, level_4, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 5){

display.drawBitmap(0, 0, level_5, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

}

void potentiometer_Status(){

potentiometer_Value = analogRead(potentiometerPin);

delay(500);


}

void power_Select()
{
  delay(button_Back_time);

  while (!is_Button_pressed(steamButton))
  {

    potentiometer_Status();

    if(potentiometer_Value < power_1_End){ //  power is 1

      // Power of alcohol in drink is 1
      power = 1;

      power_Display(power);

    }

    if(potentiometer_Value > power_1_End && potentiometer_Value < power_2_End){ //  power is 2

      // Power of alcohol in drink is 2
      power = 2;

      power_Display(power);

    }

    if(potentiometer_Value > power_2_End && potentiometer_Value < power_3_End){ //  power is 3

      // Power of alcohol in drink is 3
      power = 3;

      power_Display(power);

    }

    if(potentiometer_Value > power_3_End && potentiometer_Value < power_4_End){ //  power is 4

      // Power of alcohol in drink is 4
      power = 4;

      power_Display(power);

    }

    if(potentiometer_Value > power_4_End){ //  power is 5

      // Power of alcohol in drink is 5
      power = 5;

      power_Display(power);

    }
    
  }

power_Info();
  make_Drink();

}

void power_Info() // Prints information about value of power and print if on serial port
{

  Serial.print("[POWER OF DRINK: ");
  Serial.print(power);
  Serial.print("]");
}

void make_Drink() // Selects the right acohol power program
{
  digitalWrite(light_waterSensor, HIGH);

  int alcohol_Pump_time, soda_Pump_time;

  alcohol_Pump_time = alchol_Time * power;
  soda_Pump_time = soda_Time - (alcohol_Pump_time);

  Serial.println("\n[MAKING DRINK...]\n");
  // Display on the screen "Making cocktail in progress..."

  digitalWrite(alcohol_Pump, HIGH);
  delay(alcohol_Pump_time);
  digitalWrite(alcohol_Pump, LOW);

  Serial.println("[ALCOHOL INSERTED]");

  digitalWrite(soda_Pump, HIGH);
  delay(soda_Pump_time);
  digitalWrite(soda_Pump, LOW);

  Serial.println("[SODA INSERTED]");

  Serial.println("Drink is done...");
  Serial.println("\n\n");

  digitalWrite(light_waterSensor, LOW);
  // Display on the screen "Your cocktail is done. Cheers !"
}

void loop()
{

  start();
  modeSelection();

  power = 1;

  delay(button_Back_time);

  display.clearDisplay();
}
