#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Buttons settings
#define rightButton 4
#define leftButton 2
#define okButton 3

// Potentiometer settings
#define potentiometerPin A0
#define power_1_End 205
#define power_2_End 410
#define power_3_End 615
#define power_4_End 820

// Alcohol pumps settings
#define alcohol_Pump 11
#define soda_Pump 12

// Time settings
#define button_Check_time 30
#define button_Back_time 150
#define alchol_Time 2500
#define soda_Time 13000

int power = 0;

int potentiometer_Value;

// Image of alcohol power 1
const unsigned char PROGMEM level_1[]= { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0x04, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x02, 0x02, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x04, 0x01, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x02, 0x02, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0x04, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const int level_1allArray_LEN = 1;
const unsigned char* level_1allArray[1] = {
  level_1
};

// Image of alcohol power 2
const unsigned char PROGMEM level_2[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x40, 0x10, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x20, 0x20, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x10, 0x40, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const int level_2allArray_LEN = 1;
const unsigned char* level_2allArray[1] = {
  level_2
};

// Image of alcohol power 3
const unsigned char PROGMEM level_3[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x08, 0x02, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x04, 0x04, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x02, 0x08, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const int level_3allArray_LEN = 1;
const unsigned char* level_3allArray[1] = {
  level_3
};

// 'level_4', 128x32px
const unsigned char level_4 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0x00, 0x40, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x80, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x41, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 528)
const int level_4allArray_LEN = 1;
const unsigned char* level_4allArray[1] = {
  level_4
};

// Image of alcohol power 5
const unsigned char PROGMEM level_5[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x8f, 0x1e, 0x47, 0x88, 0x10, 0x18, 0x84, 0x47, 0x88, 0x47, 0x88, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x82, 0x48, 0x4c, 0x30, 0x18, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x90, 0x84, 0x48, 0x4a, 0x50, 0x24, 0x87, 0x08, 0x4f, 0xc8, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x07, 0x90, 0x88, 0x48, 0x49, 0x90, 0x24, 0x85, 0x08, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x88, 0x48, 0x48, 0x10, 0x7e, 0x84, 0x88, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x10, 0x90, 0x48, 0x48, 0x10, 0x42, 0x84, 0x48, 0x48, 0x48, 0x48, 0x42, 0x00, 0x00, 
  0x00, 0x04, 0x0f, 0x1e, 0x47, 0x88, 0x10, 0x42, 0xf4, 0x47, 0x88, 0x47, 0x8f, 0x3c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x7f, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0xff, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x7f, 0xe0, 
  0x0f, 0xc0, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x7f, 0xe0, 
  0x00, 0x00, 0x7f, 0xf0, 0x07, 0xff, 0x00, 0x7f, 0xf0, 0x0f, 0xfe, 0x01, 0xff, 0xc0, 0x06, 0x00, 
  0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfe, 0x00, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0xff, 0x80, 0x06, 0x00, 
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xfc, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x7f, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0xf8, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const int level_5allArray_LEN = 1;
const unsigned char* level_5allArray[1] = {
  level_5
};

void setup()
{

  Serial.begin(9600);

  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  display.clearDisplay();
  delay(2000);

  pinMode(rightButton, INPUT_PULLUP);
  pinMode(leftButton, INPUT_PULLUP);
  pinMode(okButton, INPUT_PULLUP);
  pinMode(potentiometerPin, INPUT);

  pinMode(alcohol_Pump, OUTPUT);
  pinMode(soda_Pump, OUTPUT);

  Serial.println("ALKOMAT COMPACT V0.0.1");
}

bool is_Button_pressed(int button)
{

  if (digitalRead(button) == LOW)
  {

    delay(button_Check_time);

    if (digitalRead(button) == LOW)
    {
      return true;
    }
  }

  return false;
}

void start()
{

  //Press any button to start

  Serial.println("Press any button to start...");

  while (!is_Button_pressed(okButton) && !is_Button_pressed(rightButton) && !is_Button_pressed(leftButton))
  {
  }

  delay(button_Back_time);

  Serial.println("[ALKOMAT IS RUNNING...]");
}

int power_Display(int power){

  display.clearDisplay();

if(power == 1){

display.drawBitmap(0, 0, level_1, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 2){

display.drawBitmap(0, 0, level_2, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 3){

display.drawBitmap(0, 0, level_3, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 4){

display.drawBitmap(0, 0, level_4, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

if(power == 5){

display.drawBitmap(0, 0, level_5, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
display.display();

} 

}

void potentiometer_Status(){

potentiometer_Value = analogRead(potentiometerPin);

delay(500);


}

void power_Select()
{

  while (!is_Button_pressed(okButton))
  {

    potentiometer_Status();

    if(potentiometer_Value < power_1_End){ //  power is 1

      // Power of alcohol in drink is 1
      power = 1;

      power_Display(power);

    }

    if(potentiometer_Value > power_1_End && potentiometer_Value < power_2_End){ //  power is 2

      // Power of alcohol in drink is 2
      power = 2;

      power_Display(power);

    }

    if(potentiometer_Value > power_2_End && potentiometer_Value < power_3_End){ //  power is 3

      // Power of alcohol in drink is 3
      power = 3;

      power_Display(power);

    }

    if(potentiometer_Value > power_3_End && potentiometer_Value < power_4_End){ //  power is 4

      // Power of alcohol in drink is 4
      power = 4;

      power_Display(power);

    }

    if(potentiometer_Value > power_4_End){ //  power is 5

      // Power of alcohol in drink is 5
      power = 5;

      power_Display(power);

    }
    
  }
}

void power_Info() // Prints information about value of power and print if on serial port
{

  Serial.println("");
  Serial.print("[POWER OF DRINK: ");
  Serial.print(power);
  Serial.print("]");
  Serial.print("\n\n");
}

void make_Drink() // Selects the right acohol power program
{

  int alcohol_Pump_time, soda_Pump_time;

  alcohol_Pump_time = alchol_Time * power;
  soda_Pump_time = soda_Time - (alcohol_Pump_time);

  Serial.println("[MAKING DRINK...]");
  // Display on the screen "Making cocktail in progress..."

  digitalWrite(alcohol_Pump, HIGH);
  delay(alcohol_Pump_time);
  digitalWrite(alcohol_Pump, LOW);

  Serial.println("ALCOHOL INSERTED");

  digitalWrite(soda_Pump, HIGH);
  delay(soda_Pump_time);
  digitalWrite(soda_Pump, LOW);

  Serial.println("SODA INSERTED");

  Serial.println("[DRINK IS DONE]");
  // Display on the screen "Your cocktail is done. Cheers !"
}

void loop()
{

  start();
  power_Select();
  power_Info();
  make_Drink();

  power = 1;

  delay(button_Back_time);
}
